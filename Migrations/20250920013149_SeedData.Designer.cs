// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDolist_Vilda.Data;

#nullable disable

namespace ToDolist_Vilda.Migrations
{
    [DbContext(typeof(RecipeDbContext))]
    [Migration("20250920013149_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDolist_Vilda.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Measure")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Measure = 2.0,
                            Name = "Flour",
                            RecipeId = 1,
                            UnitOfMeasure = "cups"
                        },
                        new
                        {
                            Id = 2,
                            Measure = 1.5,
                            Name = "Milk",
                            RecipeId = 1,
                            UnitOfMeasure = "cups"
                        },
                        new
                        {
                            Id = 3,
                            Measure = 2.0,
                            Name = "Eggs",
                            RecipeId = 1,
                            UnitOfMeasure = "pcs"
                        });
                });

            modelBuilder.Entity("ToDolist_Vilda.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeTitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeTitleId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instructions = "Mix ingredients and fry.",
                            RecipeTitleId = 1
                        });
                });

            modelBuilder.Entity("ToDolist_Vilda.Models.RecipeTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("RecipeTitles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TitleName = "Pancakes"
                        });
                });

            modelBuilder.Entity("ToDolist_Vilda.Models.Ingredient", b =>
                {
                    b.HasOne("ToDolist_Vilda.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ToDolist_Vilda.Models.Recipe", b =>
                {
                    b.HasOne("ToDolist_Vilda.Models.RecipeTitle", "RecipeTitle")
                        .WithMany("Recipes")
                        .HasForeignKey("RecipeTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipeTitle");
                });

            modelBuilder.Entity("ToDolist_Vilda.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("ToDolist_Vilda.Models.RecipeTitle", b =>
                {
                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
